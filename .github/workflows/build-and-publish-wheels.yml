# This is the workflow to make and push wheels to PyPi

name: Build Wheels
on:
  push:
    branches: [ master]
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '.pre-commit-config.yaml'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - 'README.md'
      - 'install_nodejs.sh'
      - 'example/*'
      - '.github/*'
  workflow_dispatch:

jobs:
  pytglin-build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch-image-names: [ 'amd64', 'arm64v8', 'arm32v7' ]
        include:
          - arch-image-names: 'amd64'
            arch-run-names: 'linux/amd64'
            build-plat-names: 'manylinux2014_x86_64'

          - arch-image-names: 'arm64v8'
            arch-run-names: 'linux/arm64/v8'
            build-plat-names: 'manylinux2014_aarch64'

          - arch-image-names: 'arm32v7'
            arch-run-names: 'linux/arm32/v7'
            build-plat-names: 'manylinux2014_armv7l'
        python-version: [ '3.10', '3.11', '3.12' ,'3.13']
    steps:
      - name: Get Branch Name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: github_info
      - name: Checkout ${{ steps.github_info.outputs.branch }}
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.github_info.outputs.branch }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Enable multi-arch support
        run: |
          echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json > /dev/null
          sudo systemctl restart docker
      - name: Build Docker Image
        run: |
          docker buildx build --load --build-arg pname="${{ matrix.build-plat-names }}" --build-arg dname="${{ matrix.arch-image-names }}" --build-arg python_version="${{ matrix.python-version }}" --platform "${{ matrix.arch-run-names }}" -t pytgcalls_p"${{ matrix.python-version }}":"${{ matrix.arch-image-names }}" . -f platforms/linux/Dockerfile
      - name: Run Docker Container
        run: |
          docker run --platform "${{ matrix.arch-run-names }}" -v "$PWD":/usr/src/mnt pytgcalls_p"${{ matrix.python-version }}":"${{ matrix.arch-image-names }}" ./linux_mount.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pytgcalls-python${{ matrix.python-version }}
          path:
            dist/*.whl